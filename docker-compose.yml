version: '3.9'

services:
  mysql_main_db:
    image: mysql
    container_name: ${MYSQL_MAIN_CONTAINER_NAME}
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_MAIN_DB_DATABASE}
      MYSQL_USER: ${MYSQL_DB_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_DB_PASSWORD}
    ports:
        - ${MYSQL_MAIN_DB_PORT}:${MYSQL_MAIN_DB_PORT}
    volumes:
        - ./db_data/mysql_main_db:/var/lib/mysql
    networks:
      - backend

  mysql_support_db:
    image: mysql
    container_name: ${MYSQL_SUPPORT_CONTAINER_NAME}
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_SUPPORT_DB_DATABASE}
      MYSQL_USER: ${MYSQL_DB_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_DB_PASSWORD}
    ports:
        - ${MYSQL_SUPPORT_DB_PORT}:${MYSQL_SUPPORT_DB_PORT}
    volumes:
      - ./db_data/mysql_support_db:/var/lib/mysql
    networks:
      - backend

  support_cache_redis:
    image: redis:7.0-alpine
    container_name: support_cache_redis
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - ./db_data/redis_support_cache:/data
    networks:
      - backend

  mongo_main_db:
    image: mongo
    container_name: ${MONGO_DB_CONTAINER_HOST}
    restart: always
    ports:
      - ${MONGO_DB_PORT}:${MONGO_DB_PORT}
    volumes:
      - ./db_data/mongo_main_db:/var/lib/mongodb
    networks:
      - backend


  server:
    container_name: main_server
    working_dir: /app/server
    depends_on:
      - mysql_main_db
      - mysql_support_db
      - support_cache_redis
      - mongo_main_db
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${MAIN_SERVER_PORT}:${MAIN_SERVER_PORT}
    volumes:
      - ./:/app/server
    networks:
      - backend

volumes:
  mysql_main_db:
    driver: local
  mysql_support_db:
    driver: local
  mongo_main_db:
    driver: local

networks:
  backend:
    driver: bridge
